{"version":3,"sources":["JokePanel/ErrorBox.tsx","JokePanel/LoadingBox.tsx","JokePanel/JokeBox.tsx","reactStore.tsx","JokePanel/JokeData.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ErrorBox","props","Grid","item","xs","Paper","className","Typography","variant","id","children","LoadingBox","type","color","JokeBox","React","fade","setFate","setTimeout","container","spacing","jokeData","setup","Fade","in","punchline","Button","onClick","reload","JokeContext","createContext","APIPath","x","APIException","Error","URI","callback","a","fetch","response","status","json","stack","JokeData","useContext","contextState","useState","loading","data","error","state","setState","TypeError","useEffect","loadJoke","Object","entries","length","OriginState","App","Provider","value","style","position","bottom","left","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAqBeA,MAdf,SAAmBC,GAEjB,OAAO,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACG,eAACC,EAAA,EAAD,CAAOC,UAAY,QAAnB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAU,KAAKC,GAAK,eAAhC,6CAGA,cAACF,EAAA,EAAD,CAAYE,GAAK,YAAjB,SACGR,EAAMS,iB,uBCDRC,MATf,WAEE,OAAO,cAACT,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACG,cAACC,EAAA,EAAD,CAAOC,UAAY,UAAnB,SACE,cAAC,IAAD,CAAcM,KAAM,OAAQC,MAAO,e,iCCgClCC,MA7Bf,SAAkBb,GACjB,IAAD,EAC0Bc,YAAe,GADzC,mBACSC,EADT,KACeC,EADf,KAGE,OADAC,YAAW,kBAAKD,GAAQ,KAAO,KACxB,cAACf,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACK,cAACC,EAAA,EAAD,UACA,eAACH,EAAA,EAAD,CAAMiB,WAAS,EAACC,QAAS,EAAzB,UACE,eAAClB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,cAACG,EAAA,EAAD,CAAYE,GAAK,QAAjB,SACGR,EAAMoB,SAASC,QAElB,cAACC,EAAA,EAAD,CAAMC,GAAMR,EAAZ,SACE,cAACT,EAAA,EAAD,CAAYE,GAAK,YAAjB,SACGR,EAAMoB,SAASI,iBAItB,cAACvB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACsB,EAAA,EAAD,CAASlB,QAAQ,YAAYK,MAAM,YAAYc,QAAW1B,EAAM2B,OAAQnB,GAAK,YAA7E,UACI,cAAC,IAAD,IADJ,kCCpBZoB,EAAcd,IAAMe,cAAc,CAJjB,CACnBC,QAAS,aAGmC,SAACC,OCH3CC,E,wIAAqBC,Q,4CAE3B,WAAyBC,EAAcP,EAAaQ,GAApD,iBAAAC,EAAA,mEAGWT,EAHX,iCAKmCU,MAAMH,GALzC,UAMmC,OADjBI,EALlB,QAMwBC,QAAsC,MAApBD,EAASC,OANnD,iCAQ+CD,EAASE,OARxD,cAQoBpB,EARpB,yBASuBe,EAASf,EAAU,KAT1C,cAWkB,IAAIY,EAAa,uCAXnC,mFAgBeG,EAAS,GAAI,KAAMM,QAhBlC,2D,sBAmDeC,MA/Bf,WACC,IAAD,EAE4BC,qBAAWf,GAA5BgB,EAFX,sBAG8BC,mBAAS,CAACC,SAAS,EAAMC,KAAM,GAAIC,MAAO,GAAIrB,QAAQ,IAHpF,mBAGWsB,EAHX,KAGkBC,EAHlB,KAII,GAA2B,mBAAjBN,EAEN,MAAM,IAAIO,UAAU,+BASxB,OAPAC,qBAAU,WACHH,EAAMH,S,wCAELO,CAAST,EAAad,QAASmB,EAAMtB,QAAQ,SAACP,EAAmB4B,GAApB,OAAoCE,EAAS,2BAAID,GAAL,IAAYH,SAAS,EAAOC,KAAM3B,EAAUO,QAAQ,EAAOqB,MAAOA,UAEhK,CAACC,EAAOL,EAAad,UAErBmB,EAAMH,QAEE,cAAC,EAAD,IAEFQ,OAAOC,QAAQN,EAAMF,MAAMS,OAAS,EAElC,cAAC,EAAD,CAASpC,SAAY6B,EAAMF,KAAMpB,OAAU,WAAMuB,EAAS,2BAAID,GAAL,IAAYtB,QAAQ,EAAMmB,SAAS,QAI5F,eAAC,EAAD,eAAYG,EAAMD,MAAOC,EAAMD,MAAQ,GAAvC,QChDTS,EACN,CACI3B,QAAS,sDA+BE4B,MA5Bf,WAAgB,IAAD,EACab,mBAASY,GADtB,mBACNR,EADM,KACCC,EADD,KAEb,OACE,qBAAK7C,UAAU,MAAf,SACE,eAACuB,EAAY+B,SAAb,CAAsBC,MAAS,CAACX,EAAO,SAAClB,GAAD,OAAYmB,EAASnB,KAA5D,UACE,eAAC9B,EAAA,EAAD,CAAMiB,WAAS,EAACC,QAAS,EAAzB,UACE,cAAClB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,GAAK,SAA9B,2CAKJ,cAAC,EAAD,OAEF,cAACP,EAAA,EAAD,CAAMiB,WAAS,EAACC,QAAS,EAAG0C,MAAS,CAACC,SAAU,QAASC,OAAQ,MAAOC,KAAO,OAA/E,SACE,cAAC/D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,iDCfG6D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee343ea1.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nimport {Grid,Paper,Typography} from '@material-ui/core';\r\ntype ErrorBoxProps = {\r\n  children: any\r\n};\r\n\r\nfunction ErrorBox (props: ErrorBoxProps)\r\n{\r\n  return <Grid item xs={12}>\r\n            <Paper className = \"error\">\r\n              <Typography variant = \"h4\" id = \"errorHeading\">\r\n                Ruh Ro - an error has occurred!\r\n              </Typography>\r\n              <Typography id = \"errorBody\">\r\n                {props.children}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n};\r\n\r\nexport default ErrorBox;\r\n","import * as React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport {Grid,Paper} from '@material-ui/core';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction LoadingBox ()\r\n{\r\n  return <Grid item xs={12}>\r\n            <Paper className = \"loading\">\r\n              <ReactLoading type={\"bars\"} color={\"black\"} />\r\n            </Paper>\r\n          </Grid>\r\n};\r\n\r\nexport default LoadingBox;\r\n","import * as React from \"react\";\nimport {JokeAPI} from './JokeTypes';\nimport Fade from '@material-ui/core/Fade';\nimport AddIcon from '@material-ui/icons/Add';\nimport {Grid,Paper, Typography, Button } from '@material-ui/core';\ntype JokeBoxProps = {\n  jokeData : JokeAPI,\n  reload: any\n};\n\n\n\nfunction JokeBox (props : JokeBoxProps)\n{\n  const [fade, setFate] = React.useState(false);\n  setTimeout(()=> setFate(true), 800);\n  return <Grid item xs={12}>\n              <Paper>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Typography id = \"setup\">\n                    {props.jokeData.setup}\n                  </Typography>\n                  <Fade in = {fade}>\n                    <Typography id = \"punchline\">\n                      {props.jokeData.punchline}\n                    </Typography>\n                  </Fade>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button  variant=\"contained\" color=\"secondary\" onClick = {props.reload} id = \"addButton\">\n                      <AddIcon />\n                      Get me a new joke!\n                  </Button >\n                </Grid> \n\n                </Grid>\n              </Paper>\n            </Grid>\n};\n\nexport default JokeBox;\n","import React from 'react'\r\nexport interface IState \r\n{\r\n    APIPath: string\r\n}\r\n\r\nconst state : IState = {\r\n    APIPath: \"localhost\"\r\n}\r\n\r\nconst JokeContext = React.createContext([state, (x: IState) => {}]);\r\nexport {JokeContext};","import  React, {useContext, useEffect,useState} from \"react\";\r\nimport {JokeAPI} from './JokeTypes'\r\nimport ErrorBox from './ErrorBox'\r\nimport LoadingBox from './LoadingBox'\r\nimport JokeBox from './JokeBox'\r\nimport {JokeContext} from '../reactStore'\r\n\r\nclass APIException extends Error{}\r\n\r\nasync function loadJoke (URI : string, reload: any, callback: any)  {\r\n    try\r\n    {\r\n        if(reload)\r\n        {\r\n            const response = await fetch(URI)\r\n            if(response.status === 200 || response.status === 202)\r\n            {\r\n                let jokeData : JokeAPI = await response.json();\r\n                return callback(jokeData, \"\")\r\n            }\r\n            throw new APIException(\"Failed to get an OK from the server\")\r\n        }\r\n    }\r\n    catch (error: any) \r\n    {\r\n        return callback({}, error.stack)\r\n    }\r\n}\r\n\r\nfunction JokeData () : JSX.Element\r\n{   \r\n\r\n    const [contextState,] = useContext(JokeContext);\r\n    const [state, setState] = useState({loading: true, data: {}, error: \"\", reload: true})\r\n    if(typeof(contextState) == \"function\")\r\n    {\r\n        throw new TypeError(\"Context state is a function\") \r\n    }\r\n    useEffect(()=>{\r\n        if(state.loading)\r\n        {\r\n            loadJoke(contextState.APIPath, state.reload, (jokeData: JokeAPI, error: string)=>setState({...state, loading: false, data: jokeData, reload: false, error: error}))\r\n        }\r\n    }, [state, contextState.APIPath])\r\n    \r\n    if(state.loading)\r\n    {\r\n        return <LoadingBox/>\r\n    } \r\n    else if (Object.entries(state.data).length > 0 )\r\n    {\r\n        return <JokeBox jokeData = {state.data} reload = {()=> {setState({...state, reload: true, loading: true})}}/>\r\n    } \r\n    else\r\n    {\r\n        return <ErrorBox> {state.error? state.error : {}} </ErrorBox>\r\n    }\r\n    \r\n};\r\n\r\nexport default JokeData;\r\n\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport JokePanel from './JokePanel'\nimport {IState, JokeContext} from './reactStore'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nconst OriginState : IState = \n{\n    APIPath: \"https://official-joke-api.appspot.com/jokes/random\"\n}\n\nfunction App() {\n  const [state, setState] = useState(OriginState);\n  return (\n    <div className=\"App\">\n      <JokeContext.Provider value = {[state, (x:IState)=>setState(x)]}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Paper >\n              <Typography variant=\"h3\" id = \"header\">\n                Your Go to Joke Simulator\n              </Typography>\n            </Paper>\n          </Grid>\n          <JokePanel/>\n        </Grid>\n        <Grid container spacing={3} style = {{position: \"fixed\", bottom: \"0px\", left : \"0px\"}}>\n          <Grid item xs={12}>\n            <Paper >\n              Copyright of DadJokesRUs\n            </Paper>\n          </Grid>\n        </Grid>\n        \n      </JokeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}